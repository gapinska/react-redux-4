{"ast":null,"code":"export const ADD_TO_CART = 'ADD_TO_CART';\nexport const addToCart = product => (dispatch, getState) => {\n  // const cartItems = getState().cartItems.slice()\n  // cartItems.forEach((item) => {\n  // \tlet alreadyInCart = false\n  // \tif (item._id === product._id) {\n  // \t\talreadyInCart = true\n  // \t\titem.count++\n  // \t}\n  // \tif (!alreadyInCart) {\n  // \t\tcartItems.push({ ...product, count: 1 })\n  // \t}\n  // })\n  console.log(product);\n  const cartItems = [];\n  cartItems.push(product);\n  dispatch({\n    type: ADD_TO_CART,\n    payload: {\n      cartItems\n    }\n  });\n  localStorage.setItem('cartItems', JSON.stringify(cartItems));\n}; // export const removeFromCart = (product) => (dispatch, getState) => {\n// \tconst cartItems = getState().cart.cartItems.slice().filter((item) => item._id !== product._id)\n// \tdispatch({\n// \t\ttype: REMOVE_FROM_CART,\n// \t\tpayload: {\n// \t\t\tcartItems\n// \t\t}\n// \t})\n// \tlocalStorage.setItem('cartItems', JSON.stringify(cartItems))\n// }","map":{"version":3,"sources":["/home/mgapinska/Dokumenty/books-shop-app/src/redux/cart/cart.js"],"names":["ADD_TO_CART","addToCart","product","dispatch","getState","console","log","cartItems","push","type","payload","localStorage","setItem","JSON","stringify"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,aAApB;AAEP,OAAO,MAAMC,SAAS,GAAIC,OAAD,IAAa,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,QAAMK,SAAS,GAAG,EAAlB;AACAA,EAAAA,SAAS,CAACC,IAAV,CAAeN,OAAf;AACAC,EAAAA,QAAQ,CAAC;AACRM,IAAAA,IAAI,EAAET,WADE;AAERU,IAAAA,OAAO,EAAE;AACRH,MAAAA;AADQ;AAFD,GAAD,CAAR;AAMAI,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeP,SAAf,CAAlC;AACA,CAvBM,C,CAyBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["export const ADD_TO_CART = 'ADD_TO_CART'\n\nexport const addToCart = (product) => (dispatch, getState) => {\n\t// const cartItems = getState().cartItems.slice()\n\t// cartItems.forEach((item) => {\n\t// \tlet alreadyInCart = false\n\t// \tif (item._id === product._id) {\n\t// \t\talreadyInCart = true\n\t// \t\titem.count++\n\t// \t}\n\n\t// \tif (!alreadyInCart) {\n\t// \t\tcartItems.push({ ...product, count: 1 })\n\t// \t}\n\t// })\n\tconsole.log(product)\n\tconst cartItems = []\n\tcartItems.push(product)\n\tdispatch({\n\t\ttype: ADD_TO_CART,\n\t\tpayload: {\n\t\t\tcartItems\n\t\t}\n\t})\n\tlocalStorage.setItem('cartItems', JSON.stringify(cartItems))\n}\n\n// export const removeFromCart = (product) => (dispatch, getState) => {\n// \tconst cartItems = getState().cart.cartItems.slice().filter((item) => item._id !== product._id)\n// \tdispatch({\n// \t\ttype: REMOVE_FROM_CART,\n// \t\tpayload: {\n// \t\t\tcartItems\n// \t\t}\n// \t})\n// \tlocalStorage.setItem('cartItems', JSON.stringify(cartItems))\n// }\n"]},"metadata":{},"sourceType":"module"}