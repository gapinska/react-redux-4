{"ast":null,"code":"export const ADD_TO_CART = 'ADD_TO_CART'; // export const addToCart = (book) => (getState) => {\n// \tconst cartItems = getState().cart.cartItems.slice()\n// \tlet alreadyInCart = false\n// \tif (cartItems) {\n// \t\tcartItems.forEach((item) => {\n// \t\t\tif (item.id === book.id) {\n// \t\t\t\talreadyInCart = true\n// \t\t\t\titem.count++\n// \t\t\t}\n// \t\t})\n// \t\tif (!alreadyInCart) {\n// \t\t\tcartItems.push({ ...book, count: 1 })\n// \t\t}\n// \t} else {\n// \t\tcartItems.push({ ...book, count: 1 })\n// \t}\n// \t// cartItems.forEach((item) => {\n// \t// \tlet alreadyInCart = false\n// \t// \tif (item.id === book.id) {\n// \t// \t\talreadyInCart = true\n// \t// \t\titem.count++\n// \t// \t\tconsole.log('1' + cartItems)\n// \t// \t} else if (!alreadyInCart) {\n// \t// \t\tcartItems.push({ ...book, count: 1 })\n// \t// \t\tconsole.log(cartItems)\n// \t// \t}\n// \t// })\n// \tconsole.log(cartItems)\n// \treturn {\n// \t\ttype: ADD_TO_CART,\n// \t\tpayload: cartItems\n// \t}\n// }\n\nexport const addToCart = product => (dispatch, getState) => {\n  const cartItems = getState().cartItems.slice();\n  console.log(cartItems);\n  cartItems.forEach(item => {\n    let alreadyInCart = false;\n\n    if (item._id === product._id) {\n      alreadyInCart = true;\n      item.count++;\n    }\n\n    if (!alreadyInCart) {\n      cartItems.push({ ...product,\n        count: 1\n      });\n    }\n  });\n  dispatch({\n    type: ADD_TO_CART,\n    payload: {\n      cartItems\n    }\n  });\n  localStorage.setItem('cartItems', JSON.stringify(cartItems));\n};","map":{"version":3,"sources":["/home/mgapinska/Dokumenty/books-shop-app/src/redux/cart/cart.js"],"names":["ADD_TO_CART","addToCart","product","dispatch","getState","cartItems","slice","console","log","forEach","item","alreadyInCart","_id","count","push","type","payload","localStorage","setItem","JSON","stringify"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,aAApB,C,CAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,SAAS,GAAIC,OAAD,IAAa,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7D,QAAMC,SAAS,GAAGD,QAAQ,GAAGC,SAAX,CAAqBC,KAArB,EAAlB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACAA,EAAAA,SAAS,CAACI,OAAV,CAAmBC,IAAD,IAAU;AAC3B,QAAIC,aAAa,GAAG,KAApB;;AACA,QAAID,IAAI,CAACE,GAAL,KAAaV,OAAO,CAACU,GAAzB,EAA8B;AAC7BD,MAAAA,aAAa,GAAG,IAAhB;AACAD,MAAAA,IAAI,CAACG,KAAL;AACA;;AAED,QAAI,CAACF,aAAL,EAAoB;AACnBN,MAAAA,SAAS,CAACS,IAAV,CAAe,EAAE,GAAGZ,OAAL;AAAcW,QAAAA,KAAK,EAAE;AAArB,OAAf;AACA;AACD,GAVD;AAWAV,EAAAA,QAAQ,CAAC;AACRY,IAAAA,IAAI,EAAEf,WADE;AAERgB,IAAAA,OAAO,EAAE;AACRX,MAAAA;AADQ;AAFD,GAAD,CAAR;AAMAY,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAef,SAAf,CAAlC;AACA,CArBM","sourcesContent":["export const ADD_TO_CART = 'ADD_TO_CART'\n\n// export const addToCart = (book) => (getState) => {\n// \tconst cartItems = getState().cart.cartItems.slice()\n// \tlet alreadyInCart = false\n// \tif (cartItems) {\n// \t\tcartItems.forEach((item) => {\n// \t\t\tif (item.id === book.id) {\n// \t\t\t\talreadyInCart = true\n// \t\t\t\titem.count++\n// \t\t\t}\n// \t\t})\n// \t\tif (!alreadyInCart) {\n// \t\t\tcartItems.push({ ...book, count: 1 })\n// \t\t}\n// \t} else {\n// \t\tcartItems.push({ ...book, count: 1 })\n// \t}\n\n// \t// cartItems.forEach((item) => {\n// \t// \tlet alreadyInCart = false\n// \t// \tif (item.id === book.id) {\n// \t// \t\talreadyInCart = true\n// \t// \t\titem.count++\n// \t// \t\tconsole.log('1' + cartItems)\n// \t// \t} else if (!alreadyInCart) {\n// \t// \t\tcartItems.push({ ...book, count: 1 })\n// \t// \t\tconsole.log(cartItems)\n// \t// \t}\n// \t// })\n// \tconsole.log(cartItems)\n// \treturn {\n// \t\ttype: ADD_TO_CART,\n// \t\tpayload: cartItems\n// \t}\n// }\n\nexport const addToCart = (product) => (dispatch, getState) => {\n\tconst cartItems = getState().cartItems.slice()\n\tconsole.log(cartItems)\n\tcartItems.forEach((item) => {\n\t\tlet alreadyInCart = false\n\t\tif (item._id === product._id) {\n\t\t\talreadyInCart = true\n\t\t\titem.count++\n\t\t}\n\n\t\tif (!alreadyInCart) {\n\t\t\tcartItems.push({ ...product, count: 1 })\n\t\t}\n\t})\n\tdispatch({\n\t\ttype: ADD_TO_CART,\n\t\tpayload: {\n\t\t\tcartItems\n\t\t}\n\t})\n\tlocalStorage.setItem('cartItems', JSON.stringify(cartItems))\n}\n"]},"metadata":{},"sourceType":"module"}