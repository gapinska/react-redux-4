{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mgapinska/Dokumenty/booking3/react-task/front/src/components/Pagination.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { currentPageUpdate } from '../redux/pagination/pagination';\nimport _, { sortedIndex } from 'lodash';\nimport paginationReducer from '../redux/pagination/paginationReducer';\n\nconst Pagination = ({\n  paginate\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const data = useSelector(state => state.data.data.metadata);\n  console.log(data);\n  const currentPage = data.page;\n  const recordsPerPage = data.records_per_page;\n  const totalRecords = data.total_records;\n  const pageAmount = Math.ceil(totalRecords / recordsPerPage);\n  if (pageAmount === 1) return null;\n\n  const pages = _.range(1, pageAmount + 1);\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: pages.map(page => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: page === currentPage ? 'page-item active' : 'page-item',\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"page-link\",\n          onClick: () => paginate(page),\n          children: page\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }, this)\n      }, page, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Pagination, \"VrJnXoQP2+XQ+/f/72CAYzsOD3w=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/home/mgapinska/Dokumenty/booking3/react-task/front/src/components/Pagination.js"],"names":["useDispatch","useSelector","currentPageUpdate","_","sortedIndex","paginationReducer","Pagination","paginate","dispatch","data","state","metadata","console","log","currentPage","page","recordsPerPage","records_per_page","totalRecords","total_records","pageAmount","Math","ceil","pages","range","map"],"mappings":";;;;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,OAAOC,CAAP,IAAYC,WAAZ,QAA+B,QAA/B;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACpC,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,IAAI,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACD,IAAN,CAAWA,IAAX,CAAgBE,QAA5B,CAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,QAAMK,WAAW,GAAGL,IAAI,CAACM,IAAzB;AACA,QAAMC,cAAc,GAAGP,IAAI,CAACQ,gBAA5B;AACA,QAAMC,YAAY,GAAGT,IAAI,CAACU,aAA1B;AACA,QAAMC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUJ,YAAY,GAAGF,cAAzB,CAAnB;AACA,MAAII,UAAU,KAAK,CAAnB,EAAsB,OAAO,IAAP;;AACtB,QAAMG,KAAK,GAAGpB,CAAC,CAACqB,KAAF,CAAQ,CAAR,EAAWJ,UAAU,GAAG,CAAxB,CAAd;;AAEA,sBACC;AAAA,2BACC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACEG,KAAK,CAACE,GAAN,CAAWV,IAAD,iBACV;AAAgB,QAAA,SAAS,EAAEA,IAAI,KAAKD,WAAT,GAAuB,kBAAvB,GAA4C,WAAvE;AAAA,+BACC;AAAQ,UAAA,SAAS,EAAC,WAAlB;AAA8B,UAAA,OAAO,EAAE,MAAMP,QAAQ,CAACQ,IAAD,CAArD;AAAA,oBACEA;AADF;AAAA;AAAA;AAAA;AAAA;AADD,SAAUA,IAAV;AAAA;AAAA;AAAA;AAAA,cADA;AADF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAaA,CAxBD;;GAAMT,U;UACYN,W,EACJC,W;;;KAFRK,U;AA0BN,eAAeA,UAAf","sourcesContent":["import { useDispatch, useSelector } from 'react-redux'\nimport { currentPageUpdate } from '../redux/pagination/pagination'\nimport _, { sortedIndex } from 'lodash'\nimport paginationReducer from '../redux/pagination/paginationReducer'\n\nconst Pagination = ({ paginate }) => {\n\tconst dispatch = useDispatch()\n\tconst data = useSelector((state) => state.data.data.metadata)\n\tconsole.log(data)\n\tconst currentPage = data.page\n\tconst recordsPerPage = data.records_per_page\n\tconst totalRecords = data.total_records\n\tconst pageAmount = Math.ceil(totalRecords / recordsPerPage)\n\tif (pageAmount === 1) return null\n\tconst pages = _.range(1, pageAmount + 1)\n\n\treturn (\n\t\t<nav>\n\t\t\t<div className=\"pagination\">\n\t\t\t\t{pages.map((page) => (\n\t\t\t\t\t<div key={page} className={page === currentPage ? 'page-item active' : 'page-item'}>\n\t\t\t\t\t\t<button className=\"page-link\" onClick={() => paginate(page)}>\n\t\t\t\t\t\t\t{page}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</nav>\n\t)\n}\n\nexport default Pagination\n"]},"metadata":{},"sourceType":"module"}