{"ast":null,"code":"export const ADD_TO_CART = 'ADD_TO_CART';\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\nexport const addToCart = book => (dispatch, getState) => {\n  // const cartItems = getState().cart.cartItems.slice()\n  // cartItems.forEach((item) => {\n  // \tlet alreadyInCart = false\n  // \tif (item.id === book.id) {\n  // \t\talreadyInCart = true\n  // \t\titem.count++\n  // \t} else if (!alreadyInCart) {\n  // \t\tcartItems.push({ ...book, count: 1 })\n  // \t}\n  // })\n  // dispatch({\n  // \ttype: ADD_TO_CART,\n  // \tpayload: {\n  // \t\tcartItems\n  // \t}\n  // })\n  // localStorage.setItem('cartItems', JSON.stringify(cartItems))\n  return {\n    type: ADD_TO_CART,\n    payload: book\n  };\n};\nexport const removeFromCart = product => (dispatch, getState) => {\n  const cartItems = getState().cart.cartItems.slice().filter(item => item._id !== product._id);\n  dispatch({\n    type: REMOVE_FROM_CART,\n    payload: {\n      cartItems\n    }\n  });\n  localStorage.setItem('cartItems', JSON.stringify(cartItems));\n};","map":{"version":3,"sources":["/home/mgapinska/Dokumenty/books-shop-app/src/redux/cart/cart.js"],"names":["ADD_TO_CART","REMOVE_FROM_CART","addToCart","book","dispatch","getState","type","payload","removeFromCart","product","cartItems","cart","slice","filter","item","_id","localStorage","setItem","JSON","stringify"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,MAAMC,SAAS,GAAIC,IAAD,IAAU,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAO;AACNC,IAAAA,IAAI,EAAEN,WADA;AAENO,IAAAA,OAAO,EAAEJ;AAFH,GAAP;AAIA,CAvBM;AAyBP,OAAO,MAAMK,cAAc,GAAIC,OAAD,IAAa,CAACL,QAAD,EAAWC,QAAX,KAAwB;AAClE,QAAMK,SAAS,GAAGL,QAAQ,GAAGM,IAAX,CAAgBD,SAAhB,CAA0BE,KAA1B,GAAkCC,MAAlC,CAA0CC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaN,OAAO,CAACM,GAAxE,CAAlB;AACAX,EAAAA,QAAQ,CAAC;AACRE,IAAAA,IAAI,EAAEL,gBADE;AAERM,IAAAA,OAAO,EAAE;AACRG,MAAAA;AADQ;AAFD,GAAD,CAAR;AAMAM,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeT,SAAf,CAAlC;AACA,CATM","sourcesContent":["export const ADD_TO_CART = 'ADD_TO_CART'\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART'\n\nexport const addToCart = (book) => (dispatch, getState) => {\n\t// const cartItems = getState().cart.cartItems.slice()\n\t// cartItems.forEach((item) => {\n\t// \tlet alreadyInCart = false\n\t// \tif (item.id === book.id) {\n\t// \t\talreadyInCart = true\n\t// \t\titem.count++\n\t// \t} else if (!alreadyInCart) {\n\t// \t\tcartItems.push({ ...book, count: 1 })\n\t// \t}\n\t// })\n\n\t// dispatch({\n\t// \ttype: ADD_TO_CART,\n\t// \tpayload: {\n\t// \t\tcartItems\n\t// \t}\n\t// })\n\t// localStorage.setItem('cartItems', JSON.stringify(cartItems))\n\treturn {\n\t\ttype: ADD_TO_CART,\n\t\tpayload: book\n\t}\n}\n\nexport const removeFromCart = (product) => (dispatch, getState) => {\n\tconst cartItems = getState().cart.cartItems.slice().filter((item) => item._id !== product._id)\n\tdispatch({\n\t\ttype: REMOVE_FROM_CART,\n\t\tpayload: {\n\t\t\tcartItems\n\t\t}\n\t})\n\tlocalStorage.setItem('cartItems', JSON.stringify(cartItems))\n}\n"]},"metadata":{},"sourceType":"module"}